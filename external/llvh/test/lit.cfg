import lit
import os
import sys

def isTrue(v):
  """Check whether a string converts to True according to CMake rules"""
  return v and v.upper() in ["1", "ON", "YES", "TRUE", "Y"]

# name: The name of this test suite.
config.name = 'LLVH'

config.test_format = lit.formats.ShTest(True)

# Optionally execute in a different directory so the output files stay there.
if "test_exec_root" in lit_config.params:
    config.test_exec_root=lit_config.params["test_exec_root"]

if sys.platform.startswith('cygwin'):
  lit_config.fatal('Running Hermes LIT tests in cygwin Python is not supported. ' +
    'When running LIT tests on Windows, please use regular Python.')
if lit_config.isWindows:
  config.available_features.add("windows")
  if not lit_config.getBashPath():
    lit_config.fatal('Running Hermes LIT tests in CMD.exe is not supported. ' +
      'When running LIT tests on Windows, please make sure bash is available. ' +
      'For example, you may invoke the test in cygwin, or add bash to your PATH.')

# Note
# 1. substitutions are applied in order.
#    %hermesc must appear before %hermes, or else %hermes will substitute *inside* %hermesc
# 2. \ are replaced with /.
#    On Windows, paths may be separated by either \ or /.
#    However, when path containing \ are substituted into RUN line, it's not automatically
#    escaped, and does not work.
if lit_config.params.get("llvh-tblgen"):
  config.substitutions.append(("%llvm-tblgen", lit_config.params["llvh-tblgen"].replace('\\', '/')))
if lit_config.params.get("FileCheck"):
  config.substitutions.append(("%FileCheck", lit_config.params["FileCheck"].replace('\\', '/')))
if lit_config.params.get("not"):
  config.substitutions.append(("%not", lit_config.params["not"].replace('\\', '/')))
